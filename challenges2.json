[{"model": "challenges.challengetopic", "pk": 2, "fields": {"name": "SELECT basic", "summary": "Get different records from different tables.", "description": "Get different records from different tables, corresponding constraints.\r\nHere will be simple select clauses written.", "available": true, "order": 0}}, {"model": "challenges.challengetopic", "pk": 4, "fields": {"name": "INSERT basic", "summary": "Insert new records to different tables.", "description": "Insert new records with different constraints to different tables.\r\nHere will be simple insert clauses written.", "available": true, "order": 2}}, {"model": "challenges.challengetopic", "pk": 5, "fields": {"name": "DELETE basic", "summary": "Delete different records from different tables.", "description": "Delete different records from different tables, corresponding constraints.\r\nHere will be simple delete clauses written.", "available": true, "order": 3}}, {"model": "challenges.challengetopic", "pk": 6, "fields": {"name": "ALTER basic", "summary": "Change structures of tables.", "description": "Change structure of certain table by certain column name.\r\nHere will be simple alter clauses written.", "available": true, "order": 4}}, {"model": "challenges.challengetopic", "pk": 7, "fields": {"name": "CREATE basic", "summary": "Create new tables.", "description": "Create new table with wanted fields and constraints.\r\nHere will be simple create clauses written.", "available": true, "order": 5}}, {"model": "challenges.challengetopic", "pk": 9, "fields": {"name": "SELECT intermediate", "summary": "Get different records from different tables.", "description": "Get different records from different tables, corresponding constraints.\r\nHere will be intermediate select clauses written.", "available": true, "order": 6}}, {"model": "challenges.challengetopic", "pk": 10, "fields": {"name": "UPDATE basic", "summary": "Update different records from different tables, corresponding constraints.", "description": "Update different records from different tables, corresponding constraints.\r\nHere will be simple update clauses written.", "available": true, "order": 1}}, {"model": "challenges.challenge", "pk": 4, "fields": {"topic": 2, "name": "Get all pokemons.", "description": "Get all records of pokemons, show all columns.", "hints": "", "points": 5, "solution_sql": "SELECT * FROM pokemon", "evaluation_sql": "", "available": true, "order": 0}}, {"model": "challenges.challenge", "pk": 5, "fields": {"topic": 2, "name": "Get names of pokemons.", "description": "Get names of all pokemons.", "hints": "", "points": 5, "solution_sql": "SELECT name FROM pokemon", "evaluation_sql": "", "available": true, "order": 1}}, {"model": "challenges.challenge", "pk": 7, "fields": {"topic": 2, "name": "Get number of pokemons.", "description": "Get number of pokemons. Name the column as Num.", "hints": "", "points": 5, "solution_sql": "SELECT COUNT(*) AS Num FROM pokemon", "evaluation_sql": "", "available": true, "order": 2}}, {"model": "challenges.challenge", "pk": 8, "fields": {"topic": 2, "name": "Get pokemons by same attack and defense.", "description": "Get all pokemons that have the same attack and defense value.\r\nShow only names.", "hints": "You can use a pattern col1 = col2", "points": 10, "solution_sql": "SELECT name FROM pokemon WHERE attack = defense", "evaluation_sql": "", "available": true, "order": 3}}, {"model": "challenges.challenge", "pk": 9, "fields": {"topic": 2, "name": "Get very fast pokemons.", "description": "Get all pokemons, whose speed is greater than 100. Show only pokemon number.", "hints": "", "points": 10, "solution_sql": "SELECT nr FROM pokemon WHERE speed > 100", "evaluation_sql": "", "available": true, "order": 4}}, {"model": "challenges.challenge", "pk": 10, "fields": {"topic": 9, "name": "Get all countries with land ending.", "description": "Get all countries that have land ending. Show only country_null as name.", "hints": "Use LIKE function.", "points": 15, "solution_sql": "SELECT country_full AS name FROM fifa WHERE country_full LIKE '%land'", "evaluation_sql": "", "available": true, "order": 0}}, {"model": "challenges.challenge", "pk": 11, "fields": {"topic": 9, "name": "Get countries by confederation.", "description": "Get countries, show only name, whose confederation is not UEFA.", "hints": "Use NOT.", "points": 15, "solution_sql": "SELECT country_full FROM fifa WHERE confederation != 'UEFA'", "evaluation_sql": "", "available": true, "order": 1}}, {"model": "challenges.challenge", "pk": 12, "fields": {"topic": 9, "name": "Get all countries by name and abbreviation.", "description": "Get all countries, whose name doesn't start with the same letter  as abbrevation does. Show coun", "hints": "Use LEFT function.", "points": 20, "solution_sql": "SELECT country_full FROM fifa WHERE LEFT(country_full, 1) != LEFT(country_abrv, 1)", "evaluation_sql": "", "available": true, "order": 2}}, {"model": "challenges.challenge", "pk": 13, "fields": {"topic": 9, "name": "Get countries by one worded name.", "description": "Get all countries, whose name is not a single word. Show the name only.", "hints": "Use LIKE function.", "points": 20, "solution_sql": "SELECT country_full FROM fifa WHERE country_full LIKE '% %'", "evaluation_sql": "", "available": true, "order": 3}}, {"model": "challenges.challengeattempt", "pk": 2, "fields": {"challenge": 4, "user": 1, "tried_sql": "SELECT * FROM pokemon", "is_successful": true, "fail_count": 0, "attempted_at": "2018-05-12T13:18:57.164Z"}}, {"model": "challenges.challengeattempt", "pk": 3, "fields": {"challenge": 5, "user": 1, "tried_sql": "SELECT name FROM pokemon", "is_successful": true, "fail_count": 0, "attempted_at": "2018-05-12T13:21:17.378Z"}}, {"model": "challenges.challengeattempt", "pk": 4, "fields": {"challenge": 7, "user": 1, "tried_sql": "SELECT COUNT(*) AS Num FROM pokemon ", "is_successful": true, "fail_count": 1, "attempted_at": "2018-05-12T13:34:27.591Z"}}, {"model": "challenges.challengeattempt", "pk": 5, "fields": {"challenge": 8, "user": 1, "tried_sql": "SELECT name FROM pokemon WHERE attack = defense", "is_successful": true, "fail_count": 0, "attempted_at": "2018-05-12T13:40:56.394Z"}}, {"model": "challenges.challengeattempt", "pk": 6, "fields": {"challenge": 9, "user": 1, "tried_sql": "SELECT nr FROM pokemon WHERE speed > 100", "is_successful": true, "fail_count": 0, "attempted_at": "2018-05-12T13:53:54.232Z"}}, {"model": "challenges.challengeattempt", "pk": 7, "fields": {"challenge": 10, "user": 1, "tried_sql": "SELECT country_full AS name FROM fifa WHERE country_full LIKE '%land'", "is_successful": true, "fail_count": 0, "attempted_at": "2018-05-12T14:02:19.377Z"}}, {"model": "challenges.challengeattempt", "pk": 8, "fields": {"challenge": 11, "user": 1, "tried_sql": "SELECT country_full FROM fifa WHERE confederation != 'UEFA'", "is_successful": true, "fail_count": 0, "attempted_at": "2018-05-12T14:10:31.218Z"}}, {"model": "challenges.challengeattempt", "pk": 9, "fields": {"challenge": 12, "user": 1, "tried_sql": "SELECT country_full FROM fifa WHERE LEFT(country_full, 1) != LEFT(country_abrv, 1)", "is_successful": true, "fail_count": 0, "attempted_at": "2018-05-12T14:21:35.243Z"}}, {"model": "challenges.challengeattempt", "pk": 10, "fields": {"challenge": 13, "user": 1, "tried_sql": "SELECT country_full FROM fifa WHERE country_full LIKE '% %'", "is_successful": true, "fail_count": 0, "attempted_at": "2018-05-12T14:28:57.861Z"}}, {"model": "challenges.topicsourcetable", "pk": 4, "fields": {"topic": 2, "name": "pokemon", "creation_sql": "CREATE TABLE IF NOT EXISTS pokemon (\r\nNr INT NULL,\r\nName VARCHAR(25) NULL,\r\nType_1 VARCHAR(6) NULL,\r\nType_2 VARCHAR(6) NULL,\r\nTotal INT NULL,\r\nHP INT NULL,\r\nAttack INT NULL,\r\nDefense INT NULL,\r\nSp_Atk INT NULL,\r\nSp_Def INT NULL,\r\nSpeed INT NULL,\r\nGeneration INT NULL,\r\nLegendary VARCHAR(5) NULL\r\n);\r\n\r\nINSERT INTO pokemon VALUES\r\n(1,'Bulbasaur','Grass','Poison',318,45,49,49,65,65,45,1,'False'),\r\n(2,'Ivysaur','Grass','Poison',405,60,62,63,80,80,60,1,'False'),\r\n(3,'Venusaur','Grass','Poison',525,80,82,83,100,100,80,1,'False'),\r\n(3,'VenusaurMega Venusaur','Grass','Poison',625,80,100,123,122,120,80,1,'False'),\r\n(4,'Charmander','Fire','',309,39,52,43,60,50,65,1,'False'),\r\n(5,'Charmeleon','Fire','',405,58,64,58,80,65,80,1,'False'),\r\n(6,'Charizard','Fire','Flying',534,78,84,78,109,85,100,1,'False'),\r\n(6,'CharizardMega Charizard X','Fire','Dragon',634,78,130,111,130,85,100,1,'False'),\r\n(6,'CharizardMega Charizard Y','Fire','Flying',634,78,104,78,159,115,100,1,'False'),\r\n(7,'Squirtle','Water','',314,44,48,65,50,64,43,1,'False'),\r\n(8,'Wartortle','Water','',405,59,63,80,65,80,58,1,'False'),\r\n(9,'Blastoise','Water','',530,79,83,100,85,105,78,1,'False'),\r\n(9,'BlastoiseMega Blastoise','Water','',630,79,103,120,135,115,78,1,'False'),\r\n(10,'Caterpie','Bug','',195,45,30,35,20,20,45,1,'False'),\r\n(11,'Metapod','Bug','',205,50,20,55,25,25,30,1,'False'),\r\n(12,'Butterfree','Bug','Flying',395,60,45,50,90,80,70,1,'False'),\r\n(13,'Weedle','Bug','Poison',195,40,35,30,20,20,50,1,'False'),\r\n(14,'Kakuna','Bug','Poison',205,45,25,50,25,25,35,1,'False'),\r\n(15,'Beedrill','Bug','Poison',395,65,90,40,45,80,75,1,'False'),\r\n(15,'BeedrillMega Beedrill','Bug','Poison',495,65,150,40,15,80,145,1,'False'),\r\n(16,'Pidgey','Normal','Flying',251,40,45,40,35,35,56,1,'False'),\r\n(17,'Pidgeotto','Normal','Flying',349,63,60,55,50,50,71,1,'False'),\r\n(18,'Pidgeot','Normal','Flying',479,83,80,75,70,70,101,1,'False'),\r\n(18,'PidgeotMega Pidgeot','Normal','Flying',579,83,80,80,135,80,121,1,'False'),\r\n(19,'Rattata','Normal','',253,30,56,35,25,35,72,1,'False'),\r\n(20,'Raticate','Normal','',413,55,81,60,50,70,97,1,'False');", "column_names_json": "[\"nr\", \"name\", \"type_1\", \"type_2\", \"total\", \"hp\", \"attack\", \"defense\", \"sp_atk\", \"sp_def\", \"speed\", \"generation\", \"legendary\"]", "content_rows_json": "[[1, \"Bulbasaur\", \"Grass\", \"Poison\", 318, 45, 49, 49, 65, 65, 45, 1, \"False\"], [2, \"Ivysaur\", \"Grass\", \"Poison\", 405, 60, 62, 63, 80, 80, 60, 1, \"False\"], [3, \"Venusaur\", \"Grass\", \"Poison\", 525, 80, 82, 83, 100, 100, 80, 1, \"False\"], [3, \"VenusaurMega Venusaur\", \"Grass\", \"Poison\", 625, 80, 100, 123, 122, 120, 80, 1, \"False\"], [4, \"Charmander\", \"Fire\", \"\", 309, 39, 52, 43, 60, 50, 65, 1, \"False\"], [5, \"Charmeleon\", \"Fire\", \"\", 405, 58, 64, 58, 80, 65, 80, 1, \"False\"], [6, \"Charizard\", \"Fire\", \"Flying\", 534, 78, 84, 78, 109, 85, 100, 1, \"False\"], [6, \"CharizardMega Charizard X\", \"Fire\", \"Dragon\", 634, 78, 130, 111, 130, 85, 100, 1, \"False\"], [6, \"CharizardMega Charizard Y\", \"Fire\", \"Flying\", 634, 78, 104, 78, 159, 115, 100, 1, \"False\"], [7, \"Squirtle\", \"Water\", \"\", 314, 44, 48, 65, 50, 64, 43, 1, \"False\"], [8, \"Wartortle\", \"Water\", \"\", 405, 59, 63, 80, 65, 80, 58, 1, \"False\"], [9, \"Blastoise\", \"Water\", \"\", 530, 79, 83, 100, 85, 105, 78, 1, \"False\"], [9, \"BlastoiseMega Blastoise\", \"Water\", \"\", 630, 79, 103, 120, 135, 115, 78, 1, \"False\"], [10, \"Caterpie\", \"Bug\", \"\", 195, 45, 30, 35, 20, 20, 45, 1, \"False\"], [11, \"Metapod\", \"Bug\", \"\", 205, 50, 20, 55, 25, 25, 30, 1, \"False\"], [12, \"Butterfree\", \"Bug\", \"Flying\", 395, 60, 45, 50, 90, 80, 70, 1, \"False\"], [13, \"Weedle\", \"Bug\", \"Poison\", 195, 40, 35, 30, 20, 20, 50, 1, \"False\"], [14, \"Kakuna\", \"Bug\", \"Poison\", 205, 45, 25, 50, 25, 25, 35, 1, \"False\"], [15, \"Beedrill\", \"Bug\", \"Poison\", 395, 65, 90, 40, 45, 80, 75, 1, \"False\"], [15, \"BeedrillMega Beedrill\", \"Bug\", \"Poison\", 495, 65, 150, 40, 15, 80, 145, 1, \"False\"], [16, \"Pidgey\", \"Normal\", \"Flying\", 251, 40, 45, 40, 35, 35, 56, 1, \"False\"], [17, \"Pidgeotto\", \"Normal\", \"Flying\", 349, 63, 60, 55, 50, 50, 71, 1, \"False\"], [18, \"Pidgeot\", \"Normal\", \"Flying\", 479, 83, 80, 75, 70, 70, 101, 1, \"False\"], [18, \"PidgeotMega Pidgeot\", \"Normal\", \"Flying\", 579, 83, 80, 80, 135, 80, 121, 1, \"False\"], [19, \"Rattata\", \"Normal\", \"\", 253, 30, 56, 35, 25, 35, 72, 1, \"False\"], [20, \"Raticate\", \"Normal\", \"\", 413, 55, 81, 60, 50, 70, 97, 1, \"False\"]]", "creation_order": 0, "order": 0, "topics": []}}, {"model": "challenges.topicsourcetable", "pk": 5, "fields": {"topic": 9, "name": "fifa", "creation_sql": "CREATE TABLE IF NOT EXISTS fifa (\r\nrank INT NULL,\r\ncountry_full VARCHAR(19) NULL,\r\ncountry_abrv VARCHAR(3) NULL,\r\ntotal_points FLOAT NULL,\r\nprevious_points INT NULL,\r\nrank_change INT NULL,\r\ncur_year_avg FLOAT NULL,\r\ncur_year_avg_weighted FLOAT NULL,\r\nlast_year_avg FLOAT NULL,\r\nlast_year_avg_weighted FLOAT NULL,\r\ntwo_year_ago_avg FLOAT NULL,\r\ntwo_year_ago_weighted FLOAT NULL,\r\nthree_year_ago_avg FLOAT NULL,\r\nthree_year_ago_weighted FLOAT NULL,\r\nconfederation VARCHAR(8) NULL,\r\nrank_date VARCHAR(10) NULL\r\n);\r\n\r\nINSERT INTO fifa VALUES\r\n(1,'Germany','GER',0.0,57,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,'UEFA','1993-08-08'),\r\n(2,'Italy','ITA',0.0,57,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,'UEFA','1993-08-08'),\r\n(3,'Switzerland','SUI',0.0,50,9,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,'UEFA','1993-08-08'),\r\n(4,'Sweden','SWE',0.0,55,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,'UEFA','1993-08-08'),\r\n(5,'Argentina','ARG',0.0,51,5,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,'CONMEBOL','1993-08-08'),\r\n(6,'Republic of Ireland','IRL',0.0,54,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,'UEFA','1993-08-08'),\r\n(7,'Russia','RUS',0.0,52,1,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,'UEFA','1993-08-08'),\r\n(8,'Brazil','BRA',0.0,55,-5,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,'CONMEBOL','1993-08-08'),\r\n(9,'Norway','NOR',0.0,49,5,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,'UEFA','1993-08-08'),\r\n(10,'Denmark','DEN',0.0,51,-1,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,'UEFA','1993-08-08'),\r\n(11,'England','ENG',0.0,55,-6,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,'UEFA','1993-08-08'),\r\n(12,'France','FRA',0.0,45,7,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,'UEFA','1993-08-08'),\r\n(13,'Spain','ESP',0.0,49,2,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,'UEFA','1993-08-08'),\r\n(14,'Mexico','MEX',0.0,42,11,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,'CONCACAF','1993-08-08'),\r\n(15,'RCS','TCH',0.0,47,3,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,'UEFA','1993-08-08'),\r\n(16,'Netherlands','NED',0.0,53,-9,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,'UEFA','1993-08-08'),\r\n(17,'Nigeria','NGA',0.0,49,-4,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,'CAF','1993-08-08'),\r\n(18,'Belgium','BEL',0.0,47,-1,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,'UEFA','1993-08-08'),\r\n(19,'Colombia','COL',0.0,36,16,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,'CONMEBOL','1993-08-08'),\r\n(20,'Poland','POL',0.0,45,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,'UEFA','1993-08-08');", "column_names_json": "[\"rank\", \"country_full\", \"country_abrv\", \"total_points\", \"previous_points\", \"rank_change\", \"cur_year_avg\", \"cur_year_avg_weighted\", \"last_year_avg\", \"last_year_avg_weighted\", \"two_year_ago_avg\", \"two_year_ago_weighted\", \"three_year_ago_avg\", \"three_year_ago_weighted\", \"confederation\", \"rank_date\"]", "content_rows_json": "[[1, \"Germany\", \"GER\", 0.0, 57, 0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, \"UEFA\", \"1993-08-08\"], [2, \"Italy\", \"ITA\", 0.0, 57, 0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, \"UEFA\", \"1993-08-08\"], [3, \"Switzerland\", \"SUI\", 0.0, 50, 9, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, \"UEFA\", \"1993-08-08\"], [4, \"Sweden\", \"SWE\", 0.0, 55, 0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, \"UEFA\", \"1993-08-08\"], [5, \"Argentina\", \"ARG\", 0.0, 51, 5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, \"CONMEBOL\", \"1993-08-08\"], [6, \"Republic of Ireland\", \"IRL\", 0.0, 54, 0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, \"UEFA\", \"1993-08-08\"], [7, \"Russia\", \"RUS\", 0.0, 52, 1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, \"UEFA\", \"1993-08-08\"], [8, \"Brazil\", \"BRA\", 0.0, 55, -5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, \"CONMEBOL\", \"1993-08-08\"], [9, \"Norway\", \"NOR\", 0.0, 49, 5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, \"UEFA\", \"1993-08-08\"], [10, \"Denmark\", \"DEN\", 0.0, 51, -1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, \"UEFA\", \"1993-08-08\"], [11, \"England\", \"ENG\", 0.0, 55, -6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, \"UEFA\", \"1993-08-08\"], [12, \"France\", \"FRA\", 0.0, 45, 7, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, \"UEFA\", \"1993-08-08\"], [13, \"Spain\", \"ESP\", 0.0, 49, 2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, \"UEFA\", \"1993-08-08\"], [14, \"Mexico\", \"MEX\", 0.0, 42, 11, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, \"CONCACAF\", \"1993-08-08\"], [15, \"RCS\", \"TCH\", 0.0, 47, 3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, \"UEFA\", \"1993-08-08\"], [16, \"Netherlands\", \"NED\", 0.0, 53, -9, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, \"UEFA\", \"1993-08-08\"], [17, \"Nigeria\", \"NGA\", 0.0, 49, -4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, \"CAF\", \"1993-08-08\"], [18, \"Belgium\", \"BEL\", 0.0, 47, -1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, \"UEFA\", \"1993-08-08\"], [19, \"Colombia\", \"COL\", 0.0, 36, 16, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, \"CONMEBOL\", \"1993-08-08\"], [20, \"Poland\", \"POL\", 0.0, 45, 0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, \"UEFA\", \"1993-08-08\"]]", "creation_order": 0, "order": 0, "topics": []}}, {"model": "challenges.challengeresulttable", "pk": 2, "fields": {"challenge": 4, "column_names_json": "[\"nr\", \"name\", \"type_1\", \"type_2\", \"total\", \"hp\", \"attack\", \"defense\", \"sp_atk\", \"sp_def\", \"speed\", \"generation\", \"legendary\"]", "content_rows_json": "[[1, \"Bulbasaur\", \"Grass\", \"Poison\", 318, 45, 49, 49, 65, 65, 45, 1, \"False\"], [2, \"Ivysaur\", \"Grass\", \"Poison\", 405, 60, 62, 63, 80, 80, 60, 1, \"False\"], [3, \"Venusaur\", \"Grass\", \"Poison\", 525, 80, 82, 83, 100, 100, 80, 1, \"False\"], [3, \"VenusaurMega Venusaur\", \"Grass\", \"Poison\", 625, 80, 100, 123, 122, 120, 80, 1, \"False\"], [4, \"Charmander\", \"Fire\", \"\", 309, 39, 52, 43, 60, 50, 65, 1, \"False\"], [5, \"Charmeleon\", \"Fire\", \"\", 405, 58, 64, 58, 80, 65, 80, 1, \"False\"], [6, \"Charizard\", \"Fire\", \"Flying\", 534, 78, 84, 78, 109, 85, 100, 1, \"False\"], [6, \"CharizardMega Charizard X\", \"Fire\", \"Dragon\", 634, 78, 130, 111, 130, 85, 100, 1, \"False\"], [6, \"CharizardMega Charizard Y\", \"Fire\", \"Flying\", 634, 78, 104, 78, 159, 115, 100, 1, \"False\"], [7, \"Squirtle\", \"Water\", \"\", 314, 44, 48, 65, 50, 64, 43, 1, \"False\"], [8, \"Wartortle\", \"Water\", \"\", 405, 59, 63, 80, 65, 80, 58, 1, \"False\"], [9, \"Blastoise\", \"Water\", \"\", 530, 79, 83, 100, 85, 105, 78, 1, \"False\"], [9, \"BlastoiseMega Blastoise\", \"Water\", \"\", 630, 79, 103, 120, 135, 115, 78, 1, \"False\"], [10, \"Caterpie\", \"Bug\", \"\", 195, 45, 30, 35, 20, 20, 45, 1, \"False\"], [11, \"Metapod\", \"Bug\", \"\", 205, 50, 20, 55, 25, 25, 30, 1, \"False\"], [12, \"Butterfree\", \"Bug\", \"Flying\", 395, 60, 45, 50, 90, 80, 70, 1, \"False\"], [13, \"Weedle\", \"Bug\", \"Poison\", 195, 40, 35, 30, 20, 20, 50, 1, \"False\"], [14, \"Kakuna\", \"Bug\", \"Poison\", 205, 45, 25, 50, 25, 25, 35, 1, \"False\"], [15, \"Beedrill\", \"Bug\", \"Poison\", 395, 65, 90, 40, 45, 80, 75, 1, \"False\"], [15, \"BeedrillMega Beedrill\", \"Bug\", \"Poison\", 495, 65, 150, 40, 15, 80, 145, 1, \"False\"], [16, \"Pidgey\", \"Normal\", \"Flying\", 251, 40, 45, 40, 35, 35, 56, 1, \"False\"], [17, \"Pidgeotto\", \"Normal\", \"Flying\", 349, 63, 60, 55, 50, 50, 71, 1, \"False\"], [18, \"Pidgeot\", \"Normal\", \"Flying\", 479, 83, 80, 75, 70, 70, 101, 1, \"False\"], [18, \"PidgeotMega Pidgeot\", \"Normal\", \"Flying\", 579, 83, 80, 80, 135, 80, 121, 1, \"False\"], [19, \"Rattata\", \"Normal\", \"\", 253, 30, 56, 35, 25, 35, 72, 1, \"False\"], [20, \"Raticate\", \"Normal\", \"\", 413, 55, 81, 60, 50, 70, 97, 1, \"False\"]]"}}, {"model": "challenges.challengeresulttable", "pk": 3, "fields": {"challenge": 5, "column_names_json": "[\"name\"]", "content_rows_json": "[[\"Bulbasaur\"], [\"Ivysaur\"], [\"Venusaur\"], [\"VenusaurMega Venusaur\"], [\"Charmander\"], [\"Charmeleon\"], [\"Charizard\"], [\"CharizardMega Charizard X\"], [\"CharizardMega Charizard Y\"], [\"Squirtle\"], [\"Wartortle\"], [\"Blastoise\"], [\"BlastoiseMega Blastoise\"], [\"Caterpie\"], [\"Metapod\"], [\"Butterfree\"], [\"Weedle\"], [\"Kakuna\"], [\"Beedrill\"], [\"BeedrillMega Beedrill\"], [\"Pidgey\"], [\"Pidgeotto\"], [\"Pidgeot\"], [\"PidgeotMega Pidgeot\"], [\"Rattata\"], [\"Raticate\"]]"}}, {"model": "challenges.challengeresulttable", "pk": 5, "fields": {"challenge": 7, "column_names_json": "[\"num\"]", "content_rows_json": "[[26]]"}}, {"model": "challenges.challengeresulttable", "pk": 6, "fields": {"challenge": 8, "column_names_json": "[\"name\"]", "content_rows_json": "[[\"Bulbasaur\"], [\"PidgeotMega Pidgeot\"]]"}}, {"model": "challenges.challengeresulttable", "pk": 7, "fields": {"challenge": 9, "column_names_json": "[\"nr\"]", "content_rows_json": "[[15], [18], [18]]"}}, {"model": "challenges.challengeresulttable", "pk": 8, "fields": {"challenge": 10, "column_names_json": "[\"name\"]", "content_rows_json": "[[\"Switzerland\"], [\"Republic of Ireland\"], [\"England\"], [\"Poland\"]]"}}, {"model": "challenges.challengeresulttable", "pk": 9, "fields": {"challenge": 11, "column_names_json": "[\"country_full\"]", "content_rows_json": "[[\"Argentina\"], [\"Brazil\"], [\"Mexico\"], [\"Nigeria\"], [\"Colombia\"]]"}}, {"model": "challenges.challengeresulttable", "pk": 10, "fields": {"challenge": 12, "column_names_json": "[\"country_full\"]", "content_rows_json": "[[\"Republic of Ireland\"], [\"Spain\"], [\"RCS\"]]"}}, {"model": "challenges.challengeresulttable", "pk": 11, "fields": {"challenge": 13, "column_names_json": "[\"country_full\"]", "content_rows_json": "[[\"Republic of Ireland\"]]"}}]